PROJECT(libitlp C)
CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
SET(CMAKE_BUILD_TYPE Release)
SET(CMAKE_MACOSX_RPATH ON)

OPTION(BUILD_SHARED_LIBS "Build Shared Library (OFF for Static)" ON)
OPTION(FORCE_OPENSSL "Use OpenSSL instead of CommonCrypto on macOS builds (needed on macOS < 10.7)" OFF)

# Installation paths
#
SET(BIN_INSTALL_DIR bin CACHE PATH "Where to install binaries to.")
SET(LIB_INSTALL_DIR lib CACHE PATH "Where to install libraries to.")
SET(INCLUDE_INSTALL_DIR include CACHE PATH "Where to install headers to.")

# C compilation flags
#
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wextra -Werror -Wpedantic -std=gnu99")
add_definitions(-DDECRYPT_KEY="${DECRYPT_KEY}")

# Sources
#
INCLUDE_DIRECTORIES(include)
FILE(GLOB SOURCES "src/*.c")

# libitlp targets
#
IF (BUILD_SHARED_LIBS)
  ADD_LIBRARY(itlp SHARED ${SOURCES})
ELSE (BUILD_SHARED_LIBS)
  ADD_LIBRARY(itlp STATIC ${SOURCES})
ENDIF (BUILD_SHARED_LIBS)

# Crypto library
#
IF (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
  IF (FORCE_OPENSSL)
    ADD_DEFINITIONS(-D_CRYPTO_OPENSSL=1)
    FIND_PACKAGE(OpenSSL REQUIRED)
    TARGET_LINK_LIBRARIES(itlp crypto)
  ELSE (FORCE_OPENSSL)
    ADD_DEFINITIONS(-D_CRYPTO_CC=1)
  ENDIF (FORCE_OPENSSL)
ELSE (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
  ADD_DEFINITIONS(-D_CRYPTO_OPENSSL=1)
  FIND_PACKAGE(OpenSSL REQUIRED)
  TARGET_LINK_LIBRARIES(itlp crypto)
ENDIF (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")

# Zlib
#
FIND_PACKAGE(ZLIB REQUIRED)
TARGET_LINK_LIBRARIES(itlp z)

# Installation
#
INSTALL(TARGETS itlp
  RUNTIME DESTINATION ${BIN_INSTALL_DIR}
  LIBRARY DESTINATION ${LIB_INSTALL_DIR}
  ARCHIVE DESTINATION ${LIB_INSTALL_DIR})
INSTALL(FILES include/itlp.h DESTINATION ${INCLUDE_INSTALL_DIR})
INSTALL(DIRECTORY include/itlp DESTINATION ${INCLUDE_INSTALL_DIR} )
